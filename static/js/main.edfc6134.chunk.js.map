{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","className","src","logo","alt","onClick","perfData","window","performance","timing","data","category","variable","value","loadEventEnd","navigationStart","label","ReactGA","event","action","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","debug","gaOptions","siteSpeedSampleRate","pageview","location","pathname","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAe,G,MAAA,IAA0B,kC,sBCiC1BA,MA7Bf,WAmBE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,wBAAQC,QAtBO,WACf,IAAMC,EAAWC,OAAOC,YAAYC,OAE9BC,EAAO,CACTC,SAAU,UACVC,SAAU,OACVC,MAJiBP,EAASQ,aAAeR,EAASS,gBAKlDC,MAAO,aAEXC,IAAQR,OAAOC,GACfO,IAAQC,MAAM,CACVP,SAAU,OACVQ,OAAQ,eACRH,MAAO,qBACPH,MAAO,IAEXO,QAAQC,IAAIX,IAMZ,sCCfOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdN,IAAQc,WAAW,iBAAkB,CAAEC,OAAO,EAAMC,UAAW,CAAEC,oBAAqB,OACtFjB,IAAQkB,SAAS5B,OAAO6B,SAASC,SAAW9B,OAAO6B,SAASE,QAE5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.edfc6134.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport ReactGA from 'react-ga';\n\nfunction App() {\n    const sendTiming = () => {\n        const perfData = window.performance.timing;\n        const pageLoadTime = perfData.loadEventEnd - perfData.navigationStart;\n        const data = {\n            category: 'Metrics',\n            variable: 'load',\n            value: pageLoadTime,\n            label: 'Load time'\n        }\n        ReactGA.timing(data);\n        ReactGA.event({\n            category: 'User',\n            action: 'Button Click',\n            label: 'Send metrics to GA',\n            value: 1,\n        });\n        console.log(data)\n    }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <button onClick={sendTiming}>Send metrics to GA</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-195481126-2', { debug: true, gaOptions: { siteSpeedSampleRate: 100 }});\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}